connectorWidth = 3,
lowColor = "#ff46c8AA",
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_add_series(
data %>% filter(TRTA == "Xanomeline High Dose") %>% select(-TRTA),
name = "Xanomeline High Dose",
connectorWidth = 3,
lowColor = "#ffc80aAA",
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_add_series(
data %>% filter(TRTA == "Xanomeline Low Dose") %>% select(-TRTA),
name = "Xanomeline Low Dose",
lowColor = "#00beffAA",
connectorWidth = 3,
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_exporting(enabled = TRUE) %>%
hc_plotOptions(series = list(animation = FALSE)) %>%
hc_xAxis(
type = "category",
uniqueNames = TRUE,
labels = list(
style = list(
color = "black",
useHTML = TRUE,
fontSize = '12',
fontFamily = "Arial"
)
)
) %>%
hc_yAxis(
title = list(
text = "Day in Study",
style = list(
color = "black",
useHTML = TRUE,
fontSize = '12',
fontFamily = "Arial"
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(adae)
runApp()
runApp()
data <- adae %>%
filter(TRTEMFL == "Y" & SAFFL == "Y") %>%
filter(AESOC != "ANY BODY SYSTEM") %>%
filter(AESOC == "GASTROINTESTINAL DISORDERS") %>%
mutate(
name = paste(USUBJID, AEDECOD),
low = ASTDY,
high = AENDY
) %>%
arrange(USUBJID, AEDECOD, ADURN) %>%
select(name, high, low, TRTA) %>%
head(50)
View(data)
runApp()
runApp()
runApp()
runApp()
runApp()
adverse_range_plot <- function(aesoc, aedecod){
data <- adae %>%
filter(TRTEMFL == "Y" & SAFFL == "Y") %>%
filter(AESOC != "ANY BODY SYSTEM") %>%
filter(if (!is.null(aesoc)) AESOC == aesoc else TRUE) %>%
mutate(
name = paste(USUBJID, AEDECOD),
low = ASTDY,
high = AENDY
) %>%
arrange(USUBJID, AEDECOD, ADURN) %>%
select(name, high, low, TRTA) %>%
head(50)
plot <- highchart() %>%
hc_chart(type = 'dumbbell', inverted = TRUE) %>%
hc_colors(c("#ff46c8AA", "#ffc80aAA", "#00beffAA")) %>%
hc_add_series(
data %>% filter(TRTA == "Placebo") %>% select(-TRTA),
name = "Placebo" ,
connectorWidth = 3,
lowColor = "#ff46c8AA",
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_add_series(
data %>% filter(TRTA == "Xanomeline High Dose") %>% select(-TRTA),
name = "Xanomeline High Dose",
connectorWidth = 3,
lowColor = "#ffc80aAA",
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_add_series(
data %>% filter(TRTA == "Xanomeline Low Dose") %>% select(-TRTA),
name = "Xanomeline Low Dose",
lowColor = "#00beffAA",
connectorWidth = 3,
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_exporting(enabled = TRUE) %>%
hc_plotOptions(series = list(animation = FALSE)) %>%
hc_xAxis(
type = "category",
uniqueNames = TRUE,
labels = list(
style = list(
color = "black",
useHTML = TRUE,
fontSize = '12',
fontFamily = "Arial"
)
)
) %>%
hc_yAxis(
title = list(
text = "Day in Study",
style = list(
color = "black",
useHTML = TRUE,
fontSize = '12',
fontFamily = "Arial"
)
)
)
}
adverse_range_plot("PSYCHIATRIC DISORDERS", NULL)
adverse_range_plot("PSYCHIATRIC DISORDERS", NULL)
adverse_range_plot(NULL, NULL)
adverse_range_plot <- function(aesoc, aedecod){
data <- adae %>%
filter(TRTEMFL == "Y" & SAFFL == "Y") %>%
filter(AESOC != "ANY BODY SYSTEM") %>%
filter(if (!is.null(aesoc)) AESOC == aesoc else TRUE) %>%
mutate(
name = paste(USUBJID, AEDECOD),
low = ASTDY,
high = AENDY
) %>%
arrange(USUBJID, AEDECOD, ADURN) %>%
select(name, high, low, TRTA) %>%
head(50)
print(data)
plot <- highchart() %>%
hc_chart(type = 'dumbbell', inverted = TRUE) %>%
hc_colors(c("#ff46c8AA", "#ffc80aAA", "#00beffAA")) %>%
hc_add_series(
data %>% filter(TRTA == "Placebo") %>% select(-TRTA),
name = "Placebo" ,
connectorWidth = 3,
lowColor = "#ff46c8AA",
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_add_series(
data %>% filter(TRTA == "Xanomeline High Dose") %>% select(-TRTA),
name = "Xanomeline High Dose",
connectorWidth = 3,
lowColor = "#ffc80aAA",
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_add_series(
data %>% filter(TRTA == "Xanomeline Low Dose") %>% select(-TRTA),
name = "Xanomeline Low Dose",
lowColor = "#00beffAA",
connectorWidth = 3,
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_exporting(enabled = TRUE) %>%
hc_plotOptions(series = list(animation = FALSE)) %>%
hc_xAxis(
type = "category",
uniqueNames = TRUE,
labels = list(
style = list(
color = "black",
useHTML = TRUE,
fontSize = '12',
fontFamily = "Arial"
)
)
) %>%
hc_yAxis(
title = list(
text = "Day in Study",
style = list(
color = "black",
useHTML = TRUE,
fontSize = '12',
fontFamily = "Arial"
)
)
)
}
adverse_range_plot(NULL, NULL)
adverse_range_plot("DIARRHOEA", NULL)
adverse_range_plot("DIARRHOEA", NULL)
data <- adae %>%
filter(TRTEMFL == "Y" & SAFFL == "Y") %>%
filter(AESOC != "ANY BODY SYSTEM") %>%
filter(if (!is.null(aesoc)) AESOC == aesoc else TRUE) %>%
mutate(
name = paste(USUBJID, AEDECOD),
low = ASTDY,
high = AENDY
) %>%
arrange(USUBJID, AEDECOD, ADURN) %>%
select(name, high, low, TRTA) %>%
head(50)
runApp()
adverse_range_plot <- function(aesoc, aedecod){
data <- adae %>%
filter(TRTEMFL == "Y" & SAFFL == "Y") %>%
filter(AESOC != "ANY BODY SYSTEM") %>%
filter(if (!is.null(aesoc)) AESOC == aesoc else TRUE) %>%
mutate(
name = paste(USUBJID, AEDECOD),
low = ASTDY,
high = AENDY
) %>%
arrange(USUBJID, AEDECOD, ADURN) %>%
select(name, high, low, TRTA) %>%
head(50)
plot <- highchart() %>%
hc_chart(type = 'dumbbell', inverted = TRUE) %>%
hc_colors(c("#ff46c8AA", "#ffc80aAA", "#00beffAA")) %>%
hc_add_series(
data %>% filter(TRTA == "Placebo") %>% select(-TRTA),
name = "Placebo" ,
connectorWidth = 3,
lowColor = "#ff46c8AA",
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_add_series(
data %>% filter(TRTA == "Xanomeline High Dose") %>% select(-TRTA),
name = "Xanomeline High Dose",
connectorWidth = 3,
lowColor = "#ffc80aAA",
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_add_series(
data %>% filter(TRTA == "Xanomeline Low Dose") %>% select(-TRTA),
name = "Xanomeline Low Dose",
lowColor = "#00beffAA",
connectorWidth = 3,
marker = list(
enabled = TRUE,
radius = 5
)
) %>%
hc_exporting(enabled = TRUE) %>%
hc_plotOptions(series = list(animation = FALSE)) %>%
hc_xAxis(
type = "category",
uniqueNames = TRUE,
labels = list(
style = list(
color = "black",
useHTML = TRUE,
fontSize = '12',
fontFamily = "Arial"
)
)
) %>%
hc_yAxis(
title = list(
text = "Day in Study",
style = list(
color = "black",
useHTML = TRUE,
fontSize = '12',
fontFamily = "Arial"
)
)
)
return(plot)
}
adverse_range_plot(NULL,NULL)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot <- highchart() %>%
hc_add_series(
data,
"pie",
hcaes(
id = AEDECOD,
name = AEDECOD,
y = n
),
colors = as.list(data$colors)
) %>%
hc_title(
text = paste(sum(data$n)),
style = list(
color = "black",
useHTML = TRUE,
fontSize = '10',
fontFamily = "Arial"
),
floating = TRUE,
verticalAlign = "middle"
) %>%
hc_plotOptions(
pie = list(
innerSize = '60%',
dataLabels = list(enabled = FALSE)
)
) %>%
hc_add_event_series(series = "pie", event = "click")
runApp()
runApp()
plot <- highchart() %>%
hc_add_series(
data,
"pie",
hcaes(
id = AEDECOD,
name = AEDECOD,
y = n
),
name = "Number of subjects",
colors = as.list(data$colors)
) %>%
hc_title(
text = paste(sum(data$n)),
style = list(
color = "black",
useHTML = TRUE,
fontSize = '10',
fontFamily = "Arial"
),
floating = TRUE,
verticalAlign = "middle"
) %>%
hc_plotOptions(
pie = list(
innerSize = '60%',
dataLabels = list(enabled = FALSE)
)
) %>%
hc_add_event_point(series = "series", event = "click")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot <- highchart() %>%
hc_add_series(
data,
"pie",
hcaes(
y = n,
x = AEDECOD
),
name = "Number of subjects",
colors = as.list(data$colors)
) %>%
hc_title(
text = paste(sum(data$n)),
style = list(
color = "black",
useHTML = TRUE,
fontSize = '10',
fontFamily = "Arial"
),
floating = TRUE,
verticalAlign = "middle"
) %>%
hc_plotOptions(
pie = list(
innerSize = '60%',
dataLabels = list(enabled = FALSE)
)
) %>%
hc_add_event_point(series = "series", event = "click")
runApp()
canvasClickFunction <- JS("function(event) {Shiny.setInputValue('canvasClicked', [this.name, event.point.name, Math.random()]);}")
legendClickFunction <- JS("function(event) {Shiny.setInputValue('legendClicked', this.name);}")
runApp()
runApp()
runApp()
runApp()
runApp()
plot <- highchart() %>%
hc_add_series(
data,
"pie",
hcaes(
y = n,
x = AEDECOD
),
name = "Number of subjects",
colors = as.list(data$colors)
) %>%
hc_title(
text = paste(sum(data$n)),
style = list(
color = "black",
useHTML = TRUE,
fontSize = '10',
fontFamily = "Arial"
),
floating = TRUE,
verticalAlign = "middle"
) %>%
hc_plotOptions(
series = list(
innerSize = '60%',
dataLabels = list(enabled = FALSE),
events = list(
click = canvasClickFunction
)
)
) %>%
hc_add_event_point(series = "series", event = "click")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(adae)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
